// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package solubris.marketmon.web;

import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;
import solubris.marketmon.domain.Event;
import solubris.marketmon.domain.EventType;
import solubris.marketmon.domain.Market;
import solubris.marketmon.domain.MarketStatusTime;
import solubris.marketmon.domain.Runner;
import solubris.marketmon.web.ApplicationConversionServiceFactoryBean;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Long, Event> ApplicationConversionServiceFactoryBean.getIdToEventConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, solubris.marketmon.domain.Event>() {
            public solubris.marketmon.domain.Event convert(java.lang.Long id) {
                return Event.findEvent(id);
            }
        };
    }
    
    public Converter<String, Event> ApplicationConversionServiceFactoryBean.getStringToEventConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, solubris.marketmon.domain.Event>() {
            public solubris.marketmon.domain.Event convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Event.class);
            }
        };
    }
    
    public Converter<EventType, String> ApplicationConversionServiceFactoryBean.getEventTypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<solubris.marketmon.domain.EventType, java.lang.String>() {
            public String convert(EventType eventType) {
                return new StringBuilder().append(eventType.getName()).toString();
            }
        };
    }
    
    public Converter<Long, EventType> ApplicationConversionServiceFactoryBean.getIdToEventTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, solubris.marketmon.domain.EventType>() {
            public solubris.marketmon.domain.EventType convert(java.lang.Long id) {
                return EventType.findEventType(id);
            }
        };
    }
    
    public Converter<String, EventType> ApplicationConversionServiceFactoryBean.getStringToEventTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, solubris.marketmon.domain.EventType>() {
            public solubris.marketmon.domain.EventType convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), EventType.class);
            }
        };
    }
    
    public Converter<Long, Market> ApplicationConversionServiceFactoryBean.getIdToMarketConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, solubris.marketmon.domain.Market>() {
            public solubris.marketmon.domain.Market convert(java.lang.Long id) {
                return Market.findMarket(id);
            }
        };
    }
    
    public Converter<String, Market> ApplicationConversionServiceFactoryBean.getStringToMarketConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, solubris.marketmon.domain.Market>() {
            public solubris.marketmon.domain.Market convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Market.class);
            }
        };
    }
    
    public Converter<Long, MarketStatusTime> ApplicationConversionServiceFactoryBean.getIdToMarketStatusTimeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, solubris.marketmon.domain.MarketStatusTime>() {
            public solubris.marketmon.domain.MarketStatusTime convert(java.lang.Long id) {
                return MarketStatusTime.findMarketStatusTime(id);
            }
        };
    }
    
    public Converter<String, MarketStatusTime> ApplicationConversionServiceFactoryBean.getStringToMarketStatusTimeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, solubris.marketmon.domain.MarketStatusTime>() {
            public solubris.marketmon.domain.MarketStatusTime convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), MarketStatusTime.class);
            }
        };
    }
    
    public Converter<Long, Runner> ApplicationConversionServiceFactoryBean.getIdToRunnerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, solubris.marketmon.domain.Runner>() {
            public solubris.marketmon.domain.Runner convert(java.lang.Long id) {
                return Runner.findRunner(id);
            }
        };
    }
    
    public Converter<String, Runner> ApplicationConversionServiceFactoryBean.getStringToRunnerConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, solubris.marketmon.domain.Runner>() {
            public solubris.marketmon.domain.Runner convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Runner.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getEventToStringConverter());
        registry.addConverter(getIdToEventConverter());
        registry.addConverter(getStringToEventConverter());
        registry.addConverter(getEventTypeToStringConverter());
        registry.addConverter(getIdToEventTypeConverter());
        registry.addConverter(getStringToEventTypeConverter());
        registry.addConverter(getMarketToStringConverter());
        registry.addConverter(getIdToMarketConverter());
        registry.addConverter(getStringToMarketConverter());
        registry.addConverter(getMarketStatusTimeToStringConverter());
        registry.addConverter(getIdToMarketStatusTimeConverter());
        registry.addConverter(getStringToMarketStatusTimeConverter());
        registry.addConverter(getRunnerToStringConverter());
        registry.addConverter(getIdToRunnerConverter());
        registry.addConverter(getStringToRunnerConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
